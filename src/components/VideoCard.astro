---
interface Props {
	stack: any;
  p: string;
  h3: string;
  source: string;
  href: string;
}

const { stack, p, h3, source, href } = Astro.props;
---
<a href={href} target="_blank" id="article" class="block overflow-hidden h-[400px] relative md:h-[300px]">
    <div id="over" class="opacity-0 absolute w-full h-full bg-opacity-50 bg-black z-10 flex justify-between flex-col items-center transition ease-out"> 
      <img src="/social/link.svg" class="absolute right-[30px] top-[30px] w-[30px] h-[30px]" alt=""/>
      <div class="transition opacity-0 translate-y-[100%] info flex justify-center items-center flex-col md:px-10 px-5 mt-5 relative">
        <h3 class="text-white text-3xl sm:text-2xl mb-5 font-semibold md:mx-10">{h3}</h3>
        <p class="text-white text-2xl sm:text-2xl md:text-lg drop-shadow font-sans">{p}</p>
      </div>
      <div class={`transition-all  translate-y-[100%] ease-out scale-50 stack w-full h-[auto] flex justify-center gap-10 items-center pb-3 px-5`}>
        {stack.map((tech) => (
          <div class="flex justify-center items-center md:py-0">
            <img src={`/icons/${tech}.svg`} class="h-[100px] w-[100px] drop-shadow-lg" alt=""/>
          </div>
        ))}
      </div>
  </div>
  <video playsinline muted loop autoplay class="w-full h-full object-cover grayscale-[100%] " src=`/proyects/${source}`/>
</a>

<style>
  #over{
    backdrop-filter: blur(10px);
  }

  #article:hover .stack, #article:hover .info, #article:hover #over{
    transform: translateY(0px) scale(1) ;
    opacity: 1;
  }
</style>